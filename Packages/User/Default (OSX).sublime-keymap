
[
    
    //============ for rails ========================
    // sublime erb
    { "keys": ["+shift+enter"], "command": "erb" },
    
    { "keys": [",", "m"], "command": "list_rails_models", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "c"], "command": "list_rails_controllers", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "v"], "command": "list_rails_views", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "h"], "command": "list_rails_helpers", "context": [{"key": "setting.command_mode"}] },
    // { "keys": [" ", "x"], "command": "list_rails_fixtures", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "t"], "command": "list_rails_tests", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "j"], "command": "list_rails_javascripts", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "s"], "command": "list_rails_stylesheets", "context": [{"key": "setting.command_mode"}] },
    
    //============ for rails end========================

    //  install simple rails nav 
    //  the ST3 version can be installed by cloning the GitHub repo (see Clone from GitHub below) and running git checkout ST3

    // =============== vi mode ========
    { "keys": ["ctrl+g"], "command": "exit_insert_mode",
        "context":
        [
            { "key": "setting.command_mode", "operand": false },
            { "key": "setting.is_widget", "operand": false }
        ]   
    },
    
    //================ quick file creator ===========
    { "keys": [",", "n"], "command": "quick_create_file", "context": [{"key": "setting.command_mode"}] },
    { "keys": [",", "d"], "command": "quick_create_directory", "context": [{"key": "setting.command_mode"}] }, 

    //================ quick file creator end ===========

    // =============== html-css-js pretty ===========
    // put .jsbeautifyrc in ~/
    // now i use cmd (pretty) not shortcut 
    // =============== html-css-js pretty ============

    // ================ dashDoc ==============
    // { "keys": ["ctrl+command+h"], "command": "dash_doc"},
    // { "keys": ["ctrl+alt+h"], "command": "dash_doc",
    //                         "args": { "flip_syntax_sensitive": true } },


    // { "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    //     [
    //         { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    //         { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    //         { "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
    //         { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
    //     ]
    // },

    // ================ dashDoc ==============

    // ================ emment ===============
    {
        "keys": [
        "ctrl+enter"
        ], 
        "command": "expand_as_you_type", 
        "context": [
        {
            "operand": false, 
            "operator": "equal", 
            "match_all": true, 
            "key": "setting.is_widget"
            }, 
            {
                "match_all": true, 
                "key": "emmet_action_enabled.expand_as_you_type"
            }
            ]
    }, 

    // ================ emment end ===============

    // ===================== alignment ================
    { "keys": ["command+a"], "command": "alignment" }, 
    // ===================== alignment end ================

    // ====================== emacs pro =================
    { "keys": ["ctrl+x", "ctrl+k"], "command": "close" },
    { "keys": ["command+p"], "command": "move", "args": {"by": "pages", "forward": false} },
    { "keys": ["command+n"], "command": "move", "args": {"by": "pages", "forward": true} },

    // ====================== emacs pro end =================

    // ============ plug-in color picker
    { "keys": ["ctrl+shift+2"], "command": "color_pick" },

    // ============ plug-in easy_motion
    { "keys": ["ctrl+;", "<character>"], "command": "easy_motion","args": {"select_text": false}},
    { "keys": ["ctrl+shift+;", "<character>"], "command": "easy_motion","args": {"select_text": true}},

    // ============ toggle words ==============
    { "keys": ["command+t"], "command": "toggle_bool" },

    // ======================  Basic ========================
    { "keys": ["f12"], "command": "toggle_full_screen" },
    
    // { "keys": ["ctrl+o"], "command": "jump_back" },
    // { "keys": ["ctrl+o"], "command": "jump_forward" },

    // { "keys": [",", ","], "command": "jump_back", "context": [{"key": "setting.command_mode"}] },
    // { "keys": [".", "."], "command": "jump_forward", "context": [{"key": "setting.command_mode"}] },

    { "keys": ["ctrl+["], "command": "jump_back" },
    { "keys": ["ctrl+]"], "command": "jump_forward" },

    { "keys": ["ctrl+u"], "command": "swap_line_up" },
    
    // { "keys": ["ctrl+["], "command": "fold" },
    // { "keys": ["ctrl+]"], "command": "unfold" },
    
    { "keys": ["command+`"], "command": "fold_all" },
    { "keys": ["command+ctrl+`"], "command": "unfold_all"},

    { "keys": ["super+k", "super+0"], "command": "unfold_all" },
    { "keys": ["super+k", "super+j"], "command": "unfold_all" },

    { "keys": ["command+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
    { "keys": ["ctrl+command+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": "#"} },


    { "keys": ["ctrl+a"], "command": "move_to", "args": {"to": "bol", "extend": false} },
    { "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol", "extend": false} },

    { "keys": ["ctrl+r"], "command": "show_panel", "args": {"panel": "replace"} },
    { "keys": ["command+c"], "command": "toggle_case_sensitive", "context":
        [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["command+r"], "command": "toggle_regex", "context":
        [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["command+w"], "command": "toggle_whole_word", "context":
        [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    },


    {
       "keys": ["ctrl+j"],  "command": "insert",
        // "args": {"to": "hardeol"},
        "args": {"characters": "\n"}
    },
 
    //comments  
    { "keys": ["command+;"], "command": "toggle_comment", "args": { "block": false } },
    { "keys": ["ctrl+command+;"], "command": "toggle_comment", "args": { "block": true } },


    { "keys": ["command+1"], "command": "focus_group", "args": { "group": 0 } },
    { "keys": ["command+2"], "command": "focus_group", "args": { "group": 1 } },
    { "keys": ["command+3"], "command": "focus_group", "args": { "group": 2 } },

    { "keys": ["command+shift+1"], "command": "move_to_group", "args": { "group": 0 } },
    { "keys": ["command+shift+2"], "command": "move_to_group", "args": { "group": 1 } },
    { "keys": ["command+shift+3"], "command": "move_to_group", "args": { "group": 2 } },
    { "keys": ["command+shift+4"], "command": "move_to_group", "args": { "group": 3 } },


    { "keys": ["ctrl+i"], "command": "find_under_expand" },
    { "keys": ["ctrl+x", "ctrl+i"], "command": "find_under_expand_skip" },


    { "keys": ["ctrl+,"], "command": "prev_view" },
    { "keys": ["ctrl+."], "command": "next_view" },
    { "keys": ["ctrl+2"], "command": "expand_selection", "args": {"to": "line"} },

    { "keys": ["ctrl+c"], "command": "copy" },
    { "keys": ["ctrl+v"], "command": "paste" },

    { "keys": ["ctrl+/"], "command": "undo" },
    { "keys": ["ctrl+shift+/"], "command": "redo_or_repeat" },  
    { "keys": ["ctrl+s"], "command": "show_panel", "args": {"panel": "find"} }, 
    { "keys": ["ctrl+command+s"], "command": "show_panel", "args": {"panel": "find_in_files"} },
    
    { "keys": ["ctrl+w"], "command": "delete_word", "args": { "forward": false, "sub_words": true } },
    { "keys": ["ctrl+0"], "command": "toggle_side_bar" }    
    // ======================  Basic end ========================
]

